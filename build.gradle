plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
//    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.18.2'
    id "org.hidetake.swagger.generator" version "2.19.2"
    id 'java-test-fixtures'
}

group = 'com.hwamok'
version = '0.1'

java {
    sourceCompatibility = '17'
}

configurations {
//    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'

    implementation files("libs/automatedRestDocs.jar")

//    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    swaggerCodegen "io.swagger.codegen.v3:swagger-codegen-cli:3.0.44"
    swaggerUI "org.webjars:swagger-ui:3.52.1"

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    compileOnly 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.springframework.restdocs:spring-restdocs-mockmvc'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation "com.epages:restdocs-api-spec-mockmvc:0.18.2"
    testImplementation 'org.springframework.security:spring-security-test'
}

/*ext {
    snippetsDir = file("${buildDir}/generated-snippets")
}

asciidoctor {
    dependsOn test
    configurations 'asciidoctorExt'
    inputs.dir snippetsDir
}*/

// kotlin ?: => 엘비스 연산자 -> null이면 뒤에꺼실행
def activeProfile = project.findProperty("spring.profiles.active") ?: "local"
openapi3 {
    servers = [{ url = getServerUrl(activeProfile)}]
    title = "Hwamok API Documentaion"
    description = "Hwamok 서버 문서"
    version = "0.0.1"
    format = "json"
}

swaggerSources {
    create("convert") {
        setInputFile(file("$buildDir/api-spec/openapi3.json"))
        code {
            language = "html"
        }
    }
}


tasks.named('generateSwaggerUIConvert') {
    dependsOn 'openapi3'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("zip", Zip.class) {
    //실행가능한 jar파일 만들어야함
    dependsOn("bootJar")

    //zip파일을 하나 생성해줘야함
    archiveFileName.set("hwamok.zip")

    //.ebextentions(optional)
    // Procfile
    // .platform
    // 우리의 jar파일
    from("build/libs/hwamok-with-tdd-0.1.jar") { into("") }
    from(".platform") { into(".platform") }
    from("procfiles/Procfile") { into("") }



}

// zip파일로 만드는 task라는 것을 만듦



// aws S3에 올린다음 호스팅한다.
// static/docs/index.html 옮기고 Routing 한다.

def getServerUrl(profile) {
    switch (profile) {
        case "dev":
            return "http://dev-localhost:8080.com"
        default:
            return "http://localhost:8080"
    }

}